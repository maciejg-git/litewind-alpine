(()=>{function u(t){t.data("dropdownContext",(s={})=>{let n={menu:{":role"(){return this.role},tabindex:0},menuItem:{role:"menuitem",tabindex:-1}},l=["menu","listbox","dialog"],h=["placement","offsetX","offsetY","flip","autoPlacement","inline"],i={};return["menu"].forEach(e=>{s[e]&&(i[e]=s[e],delete s[e])}),{isShow:!1,floating:null,contextData:{},menuItems:null,focusedMenuItemIndex:-1,autoClose:!0,placement:"bottom-start",offsetX:0,offsetY:0,flip:!1,autoPlacement:!1,role:"",init(){this.$nextTick(()=>{this.autoClose=JSON.parse(t.bound(this.$el,"data-auto-close")??this.autoClose),this.placement=t.bound(this.$el,"data-placement")??this.placement,this.offsetX=parseInt(t.bound(this.$el,"data-offset-x")??this.offsetX),this.offsetY=parseInt(t.bound(this.$el,"data-offset-y")??this.offsetY),this.flip=JSON.parse(t.bound(this.$el,"data-flip")??this.flip),this.autoPlacement=JSON.parse(t.bound(this.$el,"data-auto-placement")??this.autoPlacement);let e=t.bound(this.$el,"data-role");this.role=l.includes(e)?e:null;let a=h.reduce((f,o)=>({...f,[o]:this[o]}));this.floating=useFloating(null,this.$refs.menu,a)}),t.bind(this.$el,{"@keydown.escape.window.prevent"(){this.close()},"@keydown.down.prevent"(){this.menuItems.length&&this.$nextTick(()=>{this.focusedMenuItemIndex<this.menuItems.length-1&&this.focusedMenuItemIndex++,this.menuItems[this.focusedMenuItemIndex].focus()})},"@keydown.up.prevent"(){this.menuItems.length&&(this.focusedMenuItemIndex===-1&&(this.focusedMenuItemIndex=this.menuItems.length),this.$nextTick(()=>{this.focusedMenuItemIndex>0&&this.focusedMenuItemIndex--,this.menuItems[this.focusedMenuItemIndex].focus()}))}})},open(){this.floating.startAutoUpdate(),this.isShow=!0,this.menuItems=this.$refs.menu.querySelectorAll("[role='menuitem']"),this.$nextTick(()=>this.$refs.menu.focus())},close(){this.floating.destroy(),this.isShow=!1,this.focusedMenuItemIndex=-1},menu:{"x-show"(){return this.isShow},"@open-contextmenu.window"(){if(this.$event.detail.id!==this.$root.id)return;let e=this.$event.detail.$event;this.floating.updateVirtualElement(e),this.contextData=this.$event.detail.data,this.open()},"x-ref":"menu","@click.outside"(){this.close()},"@click"(){this.autoClose&&this.$el.contains(this.$event.target)&&this.close()},...i.menu,...n.menu},menuItem:{...n.menuItem},...s}})}document.addEventListener("alpine:init",()=>{Alpine.plugin(u)});})();
